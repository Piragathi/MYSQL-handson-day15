package com.day15;

public class Product {
	private int pdid;
	private String pdname;
	private String pdbrand;
	private int pdprice;
	public int getPdid() {
		return pdid;
	}
	public void setPdid(int pdid) {
		this.pdid = pdid;
	}
	public String getPdname() {
		return pdname;
	}
	public void setPdname(String pdname) {
		this.pdname = pdname;
	}
	public String getPdbrand() {
		return pdbrand;
	}
	public void setPdbrand(String pdbrand) {
		this.pdbrand = pdbrand;
	}
	public int getPdprice() {
		return pdprice;
	}
	public void setPdprice(int pdprice) {
		this.pdprice = pdprice;
	}
	public Product(int pdid, String pdname, String pdbrand, int pdprice) {
		super();
		this.pdid = pdid;
		this.pdname = pdname;
		this.pdbrand = pdbrand;
		this.pdprice = pdprice;
	}
	public Product() {
		super();
		
	}
	

}
 main product classs

package com.day15;

import static java.lang.System.out;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.Scanner;

public class Example4Prod {

	public static void main(String[] args) {
		Scanner sc= new Scanner(System.in);
		System.out.println("#######  Product Information########");
		int choice;
		do {
			out.println("1. Insert product");
			out.println("2. Update product");
			out.println("3. Delete product");
			out.println("4. Select product");
			out.println("5. Exit");
			out.println("Enter the choice");
			choice=Integer.parseInt(sc.nextLine());
			switch(choice) {
			case 1:
				
				out.println("Enter product Name");
				String name=sc.nextLine();
				out.println("enter product brand name");
				String brand = sc.nextLine();
				out.println("enter product price");
				int price=Integer.parseInt(sc.nextLine());
				Random r= new Random();
				int pdid=r.nextInt(999)+100;
				
				Connection con=null;
				try {
				con=ConnectionUtil.getConncetion();
				PreparedStatement ps =con.prepareStatement("INSERT INTO product VALUES (?,?,?,?)");
				ps.setInt(1, pdid);
				ps.setString(2, name);
				ps.setString(3, brand);
				ps.setInt(4, price);
				int rows=ps.executeUpdate();
				if(rows==1) {
					System.out.println("one record has been successfully inserted ");
				}
				System.out.println();

				}catch(Exception e) {
					
				}finally {
					if(con!=null) {
						try {
							con.close();
						} catch(SQLException e) {
							e.printStackTrace();
						}
					}
				}


				break;
			case 2:
				System.out.println("Enter product id");
				int pdid1=Integer.parseInt(sc.nextLine());
				System.out.println("enter new product name");
				String pdname1=sc.nextLine();
				System.out.println("enter new price ");
				int price1=Integer.parseInt(sc.nextLine());
				Connection con1=null;
                try {
					con1=ConnectionUtil.getConncetion();
                    PreparedStatement ps1=con1.prepareStatement("update product set pdname=?,pdprice=? where pdid=?");
                    ps1.setString(1, pdname1);
                    ps1.setInt(2, price1);
                    ps1.setInt(3,pdid1);
                    int rows=ps1.executeUpdate();
                    if(rows==1) {
							System.out.println("product record updated successfully");
						}
                	
                }catch(Exception e) {
                	
                }
                finally {
					if(con1!=null)
						try {
							con1.close();
						}
					catch(SQLException e) {
						e.printStackTrace();
					}
				}
				

			    break;
			case 3:
				System.out.println("enter pdid");
				int pdid2=Integer.parseInt(sc.nextLine());
				Connection con2=null;
				try {
					con2=ConnectionUtil.getConncetion();
					PreparedStatement ps2=con2.prepareStatement("delete from product where pdid=?");
					ps2.setInt(1, pdid2);
					int row=ps2.executeUpdate();
					if(row==1) {
						System.out.println("product record deleted successfully ");
					}
					
				}catch(Exception e) {
					
				}
				finally {
					if(con2 !=null) {
						try {
							con2.close();

						}catch(SQLException e) {
							e.printStackTrace();
						}
					}
				}
				break;
			case 4:
				Connection con3=null;
				try {
					con3=ConnectionUtil.getConncetion();
					Statement st=con3.createStatement();
					ResultSet rs=st.executeQuery("select * from employee");
					List<Product> l=new ArrayList<>();
					while(rs.next()) {
						Product p=new Product();
						p.setPdid(rs.getInt(1));
						p.setPdname(rs.getString(2));
						p.setPdbrand(rs.getString(3));
						p.setPdprice(rs.getInt(4));
						l.add(p);
						System.out.printf("%10s %20s %10s %10s \n","ProductID","ProductName","Brand","Price");
						for(Product p1:l) {
							System.out.printf("%10s %20s %10s %10s \n",p.getPdid(),p.getPdname(),p.getPdbrand(),p.getPdprice());;
						}
					}
					
				}catch(Exception e) {
					
				}
				finally {
					if(con3 !=null) {
						try {
							con3.close();

						}catch(SQLException e) {
							e.printStackTrace();
						}
					}
				}
			    break;
			case 5:
				System.exit(0);
				break;
				
			
			}

	}while(choice<5) ;{
		
	}

}
}


 SQL  command prompt         

mysql> select * from product;
+------+--------+---------+---------+
| pdid | pdname | pdbrand | pdprice |
+------+--------+---------+---------+
|  153 | pd1    | bd1     |   50.00 |
|  384 | pd2    | bd2     |  100.00 |
|  800 | pd3    | bd3     |   20.00 |
+------+--------+---------+---------+
3 rows in set (0.00 sec)



UPDATE

mysql> select * from product;
+------+--------+---------+---------+
| pdid | pdname | pdbrand | pdprice |
+------+--------+---------+---------+
|  153 | newpd1 | bd1     |  111.00 |
|  384 | pd2    | bd2     |  100.00 |
|  428 | pd3    | bd4     |  220.00 |
|  800 | pd4    | bd3     |  150.00 |
+------+--------+---------+---------+
4 rows in set (0.00 sec)